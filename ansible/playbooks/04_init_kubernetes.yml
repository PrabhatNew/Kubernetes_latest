- name: Init on first master
  hosts: master[0]
  become: yes
  vars_files:
    - 12_vars.yml
  tasks:
    - name: Get master IP address
      set_fact:
        master_ip: "{{ hostvars[groups['master'][0]]['ansible_host'] }}"

    - name: Initialize Kubernetes control plane
      command: "kubeadm init --control-plane-endpoint={{ FLOATING_IP }}:6443 --upload-certs --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address={{ hostvars[groups['master'][0]]['ansible_host'] }} --v=5"
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_init
      changed_when: false

    - name: Print kubeadm init output
      debug:
        var: kubeadm_init.stdout_lines

    - name: Create Kubernetes configuration directory
      file:
        path: $HOME/.kube
        state: directory

    - name: Copy admin configuration file as root
      become: yes
      copy:
        src: /etc/kubernetes/admin.conf
        dest: $HOME/.kube/config
        remote_src: true

    - name: Set ownership of .kube/config to root
      become: yes
      file:
        path: $HOME/.kube/config
        owner: root
        group: root

    - name: Create Kubernetes configuration directory for normal user
      file:
        path: $HOME/.kube
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"

    - name: Copy admin configuration file for normal user
      copy:
        src: /etc/kubernetes/admin.conf
        dest: $HOME/.kube/config
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        remote_src: true

    - name: Set ownership of .kube/config to normal user
      file:
        path: $HOME/.kube/config
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"

    - name: Get Kubernetes nodes as root
      become: yes
      shell: kubectl get nodes -o wide
      register: kubectl_nodes_root

    - name: Print Kubernetes nodes output as root
      debug:
        var: kubectl_nodes_root.stdout_lines

    - name: Add kubectl to normal user's PATH
      lineinfile:
        line: 'export PATH=$PATH:/usr/local/bin/kubectl'
        dest: $HOME/.bashrc
        state: present
        create: yes
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"

    - name: Get Kubernetes nodes as normal user
      shell: kubectl get nodes -o wide
      register: kubectl_nodes_normal_user

    - name: Print Kubernetes nodes output as normal user
      debug:
        var: kubectl_nodes_normal_user.stdout_lines

    - name: Install Flannel
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml


- name: Run kubectl as normal user
  hosts: master[0]
  tasks:
    - name: Create Kubernetes configuration directory for normal user
      command: mkdir -p $HOME/.kube

    - name: Copy admin configuration file for normal user
      command: sudo -n cp -f /etc/kubernetes/admin.conf $HOME/.kube/config

    - name: Change user permission
      shell: sudo chown $(id -u):$(id -g) $HOME/.kube/config
